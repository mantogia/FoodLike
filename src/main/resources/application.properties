# Datenquelle wird auf filebasierte H2-Datenbank konfiguriert, die sich im 
# Root-Verzeichnis des Maven-Projekts befindet und ohne Tracing in ein File
# sowie Tracing in System.out auf Level Error (1) sowie mit Benutzername sa und
# leerem Passwort
# spring.datasource.url=jdbc:h2:./h2-db;TRACE_LEVEL_FILE=0;DB_CLOSE_DELAY=-1.;TRACE_LEVEL_SYSTEM_OUT=1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.url=jdbc:mysql://localhost:3306/nutritionapp?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Peugeot_303


#spring.datasource.url=jdbc:h2:file:/data/demo
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driverClassName=org.h2.Driver

# Ermöglicht, dass die H2-Verwaltungsoberfläche über /console aufgerufen werden kann
# Darf natürlich nur in einem Development-Kontext gesetzt sein
# Anmeldung gemäss Angaben oben, aber bei URL ohne die Parameter (;...)
# spring.h2.console.enabled=true
# spring.h2.console.path=/console

# Tomcat-Server-Port
server.port = 8082

# Um mehr Informationen in der Console zu sehen, den Debug-Modus auf true setzen (Standard: false)
debug=false

# Logging-Konfiguration für alle Services so, dass ausreichend Infos fürs 
# Entwickeln vorhanden
logging.level.org.springframework=INFO
logging.level.org.apache=INFO


# Charset of HTTP requests and responses. Added to the "Content-Type" 
# header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses.
spring.http.encoding.force=true

# Damit die von JPA (Hibernate) verwalteten Tabellen nicht bei jedem Neustart (Run) gel\u00f6scht
# werden, muss die Strategie von  Hibernate auf Update statt dem Default (create-drop) gesetzt werden
spring.jpa.hibernate.ddl-auto=update

# SQL optimiert f\u00fcr MySQL-Datenbanken
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect